#! /usr/bin/env node

// Discover devices that implement a specified cluster
//
// Important: This should be run on the same link
// as your devices unless muticast forwarding is enabled.
// In SiLabs world, this probably means run it on the border router.

var coap = require('coap');
var minimist = require('minimist');
var _ = require('lodash');
_.mixin({ 'pascalCase': _.flow(_.camelCase, _.upperFirst) });

var zclip = require('../.')(coap);

var argv = minimist(process.argv.slice(2));
var clusterName = argv._[0];

if (!clusterName) {
  printUsage();
  process.exit(1);
}

if (clusterName.indexOf('Cluster') == -1) {
  clusterName = clusterName + 'Cluster';
}

if (argv.h || argv.help) {
  printUsage();
  process.exit(0);
}

var query = clusterQuery(clusterName, argv);

zclip.discover(query, function(err, ip) {
  if (err) {
    console.error(err);
    return;
  }

  console.log(ip);
});

function clusterQuery(clusterName, options) {
  var cluster = zclip.clusters[_.pascalCase(clusterName)];

  if (!cluster) {
    console.log('Unknown cluster:', clusterName);
    process.exit(1);
  }

  return {
    cluster: cluster,
    side: options.client ? zclip.CLIENT : zclip.SERVER
  }
}

function printUsage() {
  console.log('Usage:\n\
  discover <clusterName> [--server | --client]\n\
\
Hint: Use basic to find all devices.\n\
  discover basic');


}

